name: Build & Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Install dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install -y libarchive-tools

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      # macOS: Prepare Apple API key (for notarization)
      - name: Prepare for notarization
        if: matrix.os == 'macos-latest' && env.APPLE_API_KEY_ID != ''
        run: |
          mkdir -p ~/private_keys/
          echo "${{ secrets.api_key }}" > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8
        env:
          api_key: ${{ secrets.api_key }}

      # Build and release via electron-builder
      - name: Build and release
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
          windows_certs: ${{ secrets.windows_certs }}
          windows_certs_password: ${{ secrets.windows_certs_password }}
        env:
          # Optional envs for notarization
          APPLE_ID: ${{ secrets.apple_id }}
          APPLE_ID_PASS: ${{ secrets.apple_id_pass }}
          APPLE_TEAM_ID: ${{ secrets.apple_team_id }}
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}
