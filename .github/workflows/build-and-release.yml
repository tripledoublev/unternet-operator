name: Build & Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Install dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install -y libarchive-tools

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      # macOS build with signing and notarization
      - name: Build and release (mac)
        if: matrix.os == 'macos-latest'
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
        env:
          APPLE_ID: ${{ secrets.apple_id }}
          APPLE_ID_PASS: ${{ secrets.apple_id_pass }}
          APPLE_TEAM_ID: ${{ secrets.apple_team_id }}

      # linux and windows builds (no signing)
      - name: Build and release (non-mac)
        if: matrix.os != 'macos-latest'
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
